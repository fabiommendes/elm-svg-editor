module Style exposing (..)

import Dict
import Html exposing (Attribute)
import Html.Attributes exposing (attribute)
import Maybe exposing (withDefault)
import Svg.Attributes as SA exposing (..)


{-| Maps names to Svg attributes

This is necesary since we do not have access to Elm.Kernel.VirtualDom.
This would make conversion from (name, value) pairs to attributes trivial
since it could be done with `Elm.Kernel.VirtualDom name value`

-}
attributePairs : List ( String -> Attribute msg, String )
attributePairs =
    [ ( accentHeight, "accentHeight" )
    , ( accelerate, "accelerate" )
    , ( accumulate, "accumulate" )
    , ( additive, "additive" )
    , ( alphabetic, "alphabetic" )
    , ( allowReorder, "allowReorder" )
    , ( amplitude, "amplitude" )
    , ( arabicForm, "arabicForm" )
    , ( ascent, "ascent" )
    , ( attributeName, "attributeName" )
    , ( attributeType, "attributeType" )
    , ( autoReverse, "autoReverse" )
    , ( azimuth, "azimuth" )
    , ( baseFrequency, "baseFrequency" )
    , ( baseProfile, "baseProfile" )
    , ( bbox, "bbox" )
    , ( begin, "begin" )
    , ( bias, "bias" )
    , ( by, "by" )
    , ( calcMode, "calcMode" )
    , ( capHeight, "capHeight" )
    , ( class, "class" )
    , ( clipPathUnits, "clipPathUnits" )
    , ( contentScriptType, "contentScriptType" )
    , ( contentStyleType, "contentStyleType" )
    , ( cx, "cx" )
    , ( cy, "cy" )
    , ( d, "d" )
    , ( decelerate, "decelerate" )
    , ( descent, "descent" )
    , ( diffuseConstant, "diffuseConstant" )
    , ( divisor, "divisor" )
    , ( dur, "dur" )
    , ( dx, "dx" )
    , ( dy, "dy" )
    , ( edgeMode, "edgeMode" )
    , ( elevation, "elevation" )
    , ( end, "end" )
    , ( exponent, "exponent" )
    , ( externalResourcesRequired, "externalResourcesRequired" )
    , ( filterRes, "filterRes" )
    , ( filterUnits, "filterUnits" )
    , ( format, "format" )
    , ( from, "from" )
    , ( fx, "fx" )
    , ( fy, "fy" )
    , ( g1, "g1" )
    , ( g2, "g2" )
    , ( glyphName, "glyphName" )
    , ( glyphRef, "glyphRef" )
    , ( gradientTransform, "gradientTransform" )
    , ( gradientUnits, "gradientUnits" )
    , ( hanging, "hanging" )
    , ( height, "height" )
    , ( horizAdvX, "horizAdvX" )
    , ( horizOriginX, "horizOriginX" )
    , ( horizOriginY, "horizOriginY" )
    , ( id, "id" )
    , ( ideographic, "ideographic" )
    , ( in_, "in_" )
    , ( in2, "in2" )
    , ( intercept, "intercept" )
    , ( k, "k" )
    , ( k1, "k1" )
    , ( k2, "k2" )
    , ( k3, "k3" )
    , ( k4, "k4" )
    , ( kernelMatrix, "kernelMatrix" )
    , ( kernelUnitLength, "kernelUnitLength" )
    , ( keyPoints, "keyPoints" )
    , ( keySplines, "keySplines" )
    , ( keyTimes, "keyTimes" )
    , ( lang, "lang" )
    , ( lengthAdjust, "lengthAdjust" )
    , ( limitingConeAngle, "limitingConeAngle" )
    , ( local, "local" )
    , ( markerHeight, "markerHeight" )
    , ( markerUnits, "markerUnits" )
    , ( markerWidth, "markerWidth" )
    , ( maskContentUnits, "maskContentUnits" )
    , ( maskUnits, "maskUnits" )
    , ( mathematical, "mathematical" )
    , ( SA.max, "max" )
    , ( media, "media" )
    , ( method, "method" )
    , ( SA.min, "min" )
    , ( mode, "mode" )
    , ( name, "name" )
    , ( numOctaves, "numOctaves" )
    , ( offset, "offset" )
    , ( operator, "operator" )
    , ( order, "order" )
    , ( orient, "orient" )
    , ( orientation, "orientation" )
    , ( origin, "origin" )
    , ( overlinePosition, "overlinePosition" )
    , ( overlineThickness, "overlineThickness" )
    , ( panose1, "panose1" )
    , ( path, "path" )
    , ( pathLength, "pathLength" )
    , ( patternContentUnits, "patternContentUnits" )
    , ( patternTransform, "patternTransform" )
    , ( patternUnits, "patternUnits" )
    , ( pointOrder, "pointOrder" )
    , ( points, "points" )
    , ( pointsAtX, "pointsAtX" )
    , ( pointsAtY, "pointsAtY" )
    , ( pointsAtZ, "pointsAtZ" )
    , ( preserveAlpha, "preserveAlpha" )
    , ( preserveAspectRatio, "preserveAspectRatio" )
    , ( primitiveUnits, "primitiveUnits" )
    , ( r, "r" )
    , ( radius, "radius" )
    , ( refX, "refX" )
    , ( refY, "refY" )
    , ( renderingIntent, "renderingIntent" )
    , ( repeatCount, "repeatCount" )
    , ( repeatDur, "repeatDur" )
    , ( requiredExtensions, "requiredExtensions" )
    , ( requiredFeatures, "requiredFeatures" )
    , ( restart, "restart" )
    , ( result, "result" )
    , ( rotate, "rotate" )
    , ( rx, "rx" )
    , ( ry, "ry" )
    , ( scale, "scale" )
    , ( seed, "seed" )
    , ( slope, "slope" )
    , ( spacing, "spacing" )
    , ( specularConstant, "specularConstant" )
    , ( specularExponent, "specularExponent" )
    , ( speed, "speed" )
    , ( spreadMethod, "spreadMethod" )
    , ( startOffset, "startOffset" )
    , ( stdDeviation, "stdDeviation" )
    , ( stemh, "stemh" )
    , ( stemv, "stemv" )
    , ( stitchTiles, "stitchTiles" )
    , ( strikethroughPosition, "strikethroughPosition" )
    , ( strikethroughThickness, "strikethroughThickness" )
    , ( string, "string" )
    , ( style, "style" )
    , ( surfaceScale, "surfaceScale" )
    , ( systemLanguage, "systemLanguage" )
    , ( tableValues, "tableValues" )
    , ( target, "target" )
    , ( targetX, "targetX" )
    , ( targetY, "targetY" )
    , ( textLength, "textLength" )
    , ( title, "title" )
    , ( to, "to" )
    , ( transform, "transform" )
    , ( type_, "type_" )
    , ( u1, "u1" )
    , ( u2, "u2" )
    , ( underlinePosition, "underlinePosition" )
    , ( underlineThickness, "underlineThickness" )
    , ( unicode, "unicode" )
    , ( unicodeRange, "unicodeRange" )
    , ( unitsPerEm, "unitsPerEm" )
    , ( vAlphabetic, "vAlphabetic" )
    , ( vHanging, "vHanging" )
    , ( vIdeographic, "vIdeographic" )
    , ( vMathematical, "vMathematical" )
    , ( values, "values" )
    , ( version, "version" )
    , ( vertAdvY, "vertAdvY" )
    , ( vertOriginX, "vertOriginX" )
    , ( vertOriginY, "vertOriginY" )
    , ( viewBox, "viewBox" )
    , ( viewTarget, "viewTarget" )
    , ( width, "width" )
    , ( widths, "widths" )
    , ( x, "x" )
    , ( xHeight, "xHeight" )
    , ( x1, "x1" )
    , ( x2, "x2" )
    , ( xChannelSelector, "xChannelSelector" )
    , ( xlinkActuate, "xlinkActuate" )
    , ( xlinkArcrole, "xlinkArcrole" )
    , ( xlinkHref, "xlinkHref" )
    , ( xlinkRole, "xlinkRole" )
    , ( xlinkShow, "xlinkShow" )
    , ( xlinkTitle, "xlinkTitle" )
    , ( xlinkType, "xlinkType" )
    , ( xmlBase, "xmlBase" )
    , ( xmlLang, "xmlLang" )
    , ( xmlSpace, "xmlSpace" )
    , ( y, "y" )
    , ( y1, "y1" )
    , ( y2, "y2" )
    , ( yChannelSelector, "yChannelSelector" )
    , ( z, "z" )
    , ( zoomAndPan, "zoomAndPan" )
    , ( alignmentBaseline, "alignmentBaseline" )
    , ( baselineShift, "baselineShift" )
    , ( clipPath, "clipPath" )
    , ( clipRule, "clipRule" )
    , ( clip, "clip" )
    , ( colorInterpolationFilters, "colorInterpolationFilters" )
    , ( colorInterpolation, "colorInterpolation" )
    , ( colorProfile, "colorProfile" )
    , ( colorRendering, "colorRendering" )
    , ( color, "color" )
    , ( cursor, "cursor" )
    , ( direction, "direction" )
    , ( display, "display" )
    , ( dominantBaseline, "dominantBaseline" )
    , ( enableBackground, "enableBackground" )
    , ( fillOpacity, "fillOpacity" )
    , ( fillRule, "fillRule" )
    , ( fill, "fill" )
    , ( filter, "filter" )
    , ( floodColor, "floodColor" )
    , ( floodOpacity, "floodOpacity" )
    , ( fontFamily, "fontFamily" )
    , ( fontSizeAdjust, "fontSizeAdjust" )
    , ( fontSize, "fontSize" )
    , ( fontStretch, "fontStretch" )
    , ( fontStyle, "fontStyle" )
    , ( fontVariant, "fontVariant" )
    , ( fontWeight, "fontWeight" )
    , ( glyphOrientationHorizontal, "glyphOrientationHorizontal" )
    , ( glyphOrientationVertical, "glyphOrientationVertical" )
    , ( imageRendering, "imageRendering" )
    , ( kerning, "kerning" )
    , ( letterSpacing, "letterSpacing" )
    , ( lightingColor, "lightingColor" )
    , ( markerEnd, "markerEnd" )
    , ( markerMid, "markerMid" )
    , ( markerStart, "markerStart" )
    , ( mask, "mask" )
    , ( opacity, "opacity" )
    , ( overflow, "overflow" )
    , ( pointerEvents, "pointerEvents" )
    , ( shapeRendering, "shapeRendering" )
    , ( stopColor, "stopColor" )
    , ( stopOpacity, "stopOpacity" )
    , ( strokeDasharray, "strokeDasharray" )
    , ( strokeDashoffset, "strokeDashoffset" )
    , ( strokeLinecap, "strokeLinecap" )
    , ( strokeLinejoin, "strokeLinejoin" )
    , ( strokeMiterlimit, "strokeMiterlimit" )
    , ( strokeOpacity, "strokeOpacity" )
    , ( strokeWidth, "strokeWidth" )
    , ( stroke, "stroke" )
    , ( textAnchor, "textAnchor" )
    , ( textDecoration, "textDecoration" )
    , ( textRendering, "textRendering" )
    , ( unicodeBidi, "unicodeBidi" )
    , ( visibility, "visibility" )
    , ( wordSpacing, "wordSpacing" )
    , ( writingMode, "writingMode" )
    ]


attributeMap : Dict.Dict String (String -> Attribute msg)
attributeMap =
    attributePairs
        |> List.map (\( x, y ) -> ( y, x ))
        |> Dict.fromList


toAttribute : String -> String -> Attribute msg
toAttribute name value =
    Dict.get name attributeMap
        |> Maybe.map (\f -> f value)
        |> withDefault (attribute name value)
